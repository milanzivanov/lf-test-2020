{"version":3,"sources":["_global.scss","_icons.scss","_fonts.scss","style.scss","_mixins.scss"],"names":[],"mappings":"AAAA,KACI,qBAAsB,CACtB,cAAe,CAGnB,iBACI,kBAAmB,CAGvB,EACI,SAAU,CACV,QAAS,CACT,oBAAqB,CACrB,eAAgB,CAGpB,eACI,gBAAiB,CACjB,aAAc,CCjBlB,WACI,oBAAqB,CACrB,UAAW,CACX,WAAY,CACZ,cAAe,CACf,mBAAoB,CACpB,iBAAkB;;ACNtB,mFAAA,CCSA,KACI,cAAe,CACf,YAAa,CACb,6BAAgC,CAGpC,WACI,iBAAkB,CAClB,0CAA+C,CAE/C,qBAAsB,CACtB,YAAa,CCpBb,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CDavB,cASQ,iBAAkB,CAClB,SAAU,CACV,UAAa,CAIrB,kBAGI,+CAA2C,CAA3C,uCAA2C,CAE3C,oCAEY,CAEhB,mCARI,iBAAkB,CAClB,UAAW,CAIX,UAAW,CACX,WASY,CAPhB,iBAII,kCAGY","file":"style.css","sourcesContent":["html {\r\n    box-sizing: border-box;\r\n    font-size: 100%;\r\n}\r\n\r\n*, *:before, *:after {\r\n    box-sizing: inherit;   \r\n}\r\n\r\n* {\r\n    padding: 0;\r\n    margin: 0;\r\n    text-decoration: none;\r\n    list-style: none;\r\n}\r\n\r\n.wrapper-inner {\r\n    max-width: 1170px;\r\n    margin: 0 auto;\r\n}","//\r\n.svg__icon {\r\n    display: inline-block;\r\n    width: 30px;\r\n    height: 30px;\r\n    stroke-width: 0;\r\n    stroke: currentColor;\r\n    fill: currentColor;\r\n  }","// fonts \r\n/*! Generated by Font Squirrel (https://www.fontsquirrel.com) on January 15, 2020 */\r\n// @font-face {\r\n//     font-family: 'butlerblack';\r\n//     src: url('../fonts/butler_black-webfont..woff2') format('woff2'),\r\n//          url('../fonts/butler_black-webfont.woff') format('woff');\r\n//     font-weight: normal;\r\n//     font-style: normal;\r\n// }","@import \"global\";\r\n@import \"mixins\";\r\n@import \"header\";\r\n@import \"footer\";\r\n@import \"colors\";\r\n@import \"typography\";\r\n@import \"icons\";\r\n@import \"fonts\";\r\n\r\n\r\nbody {\r\n    font-size: 25px;\r\n    height: 100vh;\r\n    font-family: \"Roboto\" sans-serif;\r\n}\r\n\r\n.container {\r\n    position: relative;\r\n    background: url(\"./../src/img/landingPage.png\");\r\n    // background-color: #12202d;\r\n    background-size: cover;\r\n    height: 100vh;\r\n    @include flexCHV;\r\n     \r\n    h1 {\r\n        position: relative;\r\n        z-index: 5;\r\n        color: yellow;\r\n    }\r\n}\r\n\r\n.container::before {\r\n    position: absolute;\r\n    content: '';\r\n    clip-path: polygon(0 0, 0% 100%, 100% 100%);\r\n    // background-color: #56bcbb;\r\n    background-color: rgba(86, 188, 187, 0.8);\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.container::after {\r\n    position: absolute;\r\n    content: '';\r\n    // background-color: #12202d;\r\n    background-color: rgba(18, 32, 45, 0.6);\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n","@mixin flexCHV {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n@mixin displayHide {\r\n    display: none;\r\n}\r\n\r\n\r\n/* ----------------- Media queris mobile first\r\n----------------------------------------------------------------------- */\r\n\r\n@mixin breakpoint ($point) {\r\n    @if $point == 'mobile' {\r\n        @media only screen and (min-width: 360px) { @content; }\r\n    }\r\n\r\n    @else if $point == 'tablet' {\r\n        @media only screen and (min-width: 480px) { @content; }\r\n    }\r\n\r\n    @else if $point == 'desktop' {\r\n        @media only screen and (min-width: 768px) { @content; }\r\n    }\r\n\r\n    @else if $point == 'large-desktop' {\r\n        @media only screen and (min-width: 1024px) { @content; }\r\n    }\r\n\r\n    @else if $point == 'extra-large-desktop' {\r\n        @media only screen and (min-width: 1366px) { @content; }\r\n    }\r\n\r\n    @else {\r\n        @media only screen and (min-width: $point) { @content; }\r\n    }\r\n}\r\n\r\n/* ----------------- Media queris desktop first\r\n----------------------------------------------------------------------- */\r\n\r\n// @mixin breakpoint ($point) {\r\n//     @if $point == 'mobile' {\r\n//         @media only screen and (min-width: 120px) and (max-width : 767px) { @content; }\r\n//     }\r\n\r\n//     @else if $point == 'tablet' {\r\n//         @media only screen and (min-width: 768px) and (max-width : 1399px) { @content; }\r\n//     }\r\n\r\n//     @else if $point == 'desktop' {\r\n//         @media only screen and (min-width: 1400px) { @content; }\r\n//     }\r\n\r\n//     @else {\r\n//         @media only screen and (min-width: $point) { @content; }\r\n//     }\r\n// }"]}